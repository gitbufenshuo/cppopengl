// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.5
// source: mc/comm/gltf.proto

package comm

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []int32 `protobuf:"varint,1,rep,packed,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *Scene) Reset() {
	*x = Scene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scene) ProtoMessage() {}

func (x *Scene) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scene.ProtoReflect.Descriptor instead.
func (*Scene) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{0}
}

func (x *Scene) GetNodes() []int32 {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mesh int32 `protobuf:"varint,1,opt,name=mesh,proto3" json:"mesh,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetMesh() int32 {
	if x != nil {
		return x.Mesh
	}
	return 0
}

type Attributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	POSITION   int32 `protobuf:"varint,1,opt,name=POSITION,proto3" json:"POSITION,omitempty"`
	NORMAL     int32 `protobuf:"varint,2,opt,name=NORMAL,proto3" json:"NORMAL,omitempty"`
	TEXCOORD_0 int32 `protobuf:"varint,3,opt,name=TEXCOORD_0,json=TEXCOORD0,proto3" json:"TEXCOORD_0,omitempty"`
}

func (x *Attributes) Reset() {
	*x = Attributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attributes) ProtoMessage() {}

func (x *Attributes) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attributes.ProtoReflect.Descriptor instead.
func (*Attributes) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{2}
}

func (x *Attributes) GetPOSITION() int32 {
	if x != nil {
		return x.POSITION
	}
	return 0
}

func (x *Attributes) GetNORMAL() int32 {
	if x != nil {
		return x.NORMAL
	}
	return 0
}

func (x *Attributes) GetTEXCOORD_0() int32 {
	if x != nil {
		return x.TEXCOORD_0
	}
	return 0
}

type Primitive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Indices    int32       `protobuf:"varint,1,opt,name=indices,proto3" json:"indices,omitempty"`
	Attributes *Attributes `protobuf:"bytes,2,opt,name=attributes,proto3" json:"attributes,omitempty"`
}

func (x *Primitive) Reset() {
	*x = Primitive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Primitive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Primitive) ProtoMessage() {}

func (x *Primitive) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Primitive.ProtoReflect.Descriptor instead.
func (*Primitive) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{3}
}

func (x *Primitive) GetIndices() int32 {
	if x != nil {
		return x.Indices
	}
	return 0
}

func (x *Primitive) GetAttributes() *Attributes {
	if x != nil {
		return x.Attributes
	}
	return nil
}

type Mesh struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Primitives []*Primitive `protobuf:"bytes,1,rep,name=primitives,proto3" json:"primitives,omitempty"`
}

func (x *Mesh) Reset() {
	*x = Mesh{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mesh) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mesh) ProtoMessage() {}

func (x *Mesh) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mesh.ProtoReflect.Descriptor instead.
func (*Mesh) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{4}
}

func (x *Mesh) GetPrimitives() []*Primitive {
	if x != nil {
		return x.Primitives
	}
	return nil
}

type Texture struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sampler int32 `protobuf:"varint,1,opt,name=sampler,proto3" json:"sampler,omitempty"`
	Source  int32 `protobuf:"varint,2,opt,name=source,proto3" json:"source,omitempty"`
}

func (x *Texture) Reset() {
	*x = Texture{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Texture) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Texture) ProtoMessage() {}

func (x *Texture) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Texture.ProtoReflect.Descriptor instead.
func (*Texture) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{5}
}

func (x *Texture) GetSampler() int32 {
	if x != nil {
		return x.Sampler
	}
	return 0
}

func (x *Texture) GetSource() int32 {
	if x != nil {
		return x.Source
	}
	return 0
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{6}
}

func (x *Image) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

type Sampler struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MagFilter int32 `protobuf:"varint,1,opt,name=magFilter,proto3" json:"magFilter,omitempty"`
	MinFilter int32 `protobuf:"varint,2,opt,name=minFilter,proto3" json:"minFilter,omitempty"`
	WrapS     int32 `protobuf:"varint,3,opt,name=wrapS,proto3" json:"wrapS,omitempty"`
	WrapT     int32 `protobuf:"varint,4,opt,name=wrapT,proto3" json:"wrapT,omitempty"`
}

func (x *Sampler) Reset() {
	*x = Sampler{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sampler) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sampler) ProtoMessage() {}

func (x *Sampler) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sampler.ProtoReflect.Descriptor instead.
func (*Sampler) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{7}
}

func (x *Sampler) GetMagFilter() int32 {
	if x != nil {
		return x.MagFilter
	}
	return 0
}

func (x *Sampler) GetMinFilter() int32 {
	if x != nil {
		return x.MinFilter
	}
	return 0
}

func (x *Sampler) GetWrapS() int32 {
	if x != nil {
		return x.WrapS
	}
	return 0
}

func (x *Sampler) GetWrapT() int32 {
	if x != nil {
		return x.WrapT
	}
	return 0
}

type Buffer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri        string `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	ByteLength int32  `protobuf:"varint,2,opt,name=byteLength,proto3" json:"byteLength,omitempty"`
}

func (x *Buffer) Reset() {
	*x = Buffer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Buffer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Buffer) ProtoMessage() {}

func (x *Buffer) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Buffer.ProtoReflect.Descriptor instead.
func (*Buffer) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{8}
}

func (x *Buffer) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Buffer) GetByteLength() int32 {
	if x != nil {
		return x.ByteLength
	}
	return 0
}

type BufferView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Buffer     int32 `protobuf:"varint,1,opt,name=buffer,proto3" json:"buffer,omitempty"`
	ByteOffset int32 `protobuf:"varint,2,opt,name=byteOffset,proto3" json:"byteOffset,omitempty"`
	ByteLength int32 `protobuf:"varint,3,opt,name=byteLength,proto3" json:"byteLength,omitempty"`
	ByteStride int32 `protobuf:"varint,4,opt,name=byteStride,proto3" json:"byteStride,omitempty"`
	Target     int32 `protobuf:"varint,5,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *BufferView) Reset() {
	*x = BufferView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BufferView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BufferView) ProtoMessage() {}

func (x *BufferView) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BufferView.ProtoReflect.Descriptor instead.
func (*BufferView) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{9}
}

func (x *BufferView) GetBuffer() int32 {
	if x != nil {
		return x.Buffer
	}
	return 0
}

func (x *BufferView) GetByteOffset() int32 {
	if x != nil {
		return x.ByteOffset
	}
	return 0
}

func (x *BufferView) GetByteLength() int32 {
	if x != nil {
		return x.ByteLength
	}
	return 0
}

func (x *BufferView) GetByteStride() int32 {
	if x != nil {
		return x.ByteStride
	}
	return 0
}

func (x *BufferView) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

type Accessor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BufferView    int32   `protobuf:"varint,1,opt,name=bufferView,proto3" json:"bufferView,omitempty"`
	ByteOffset    int32   `protobuf:"varint,2,opt,name=byteOffset,proto3" json:"byteOffset,omitempty"`
	ComponentType int32   `protobuf:"varint,3,opt,name=componentType,proto3" json:"componentType,omitempty"`
	Count         int32   `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	Type          string  `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	Max           []int32 `protobuf:"varint,6,rep,packed,name=max,proto3" json:"max,omitempty"`
	Min           []int32 `protobuf:"varint,7,rep,packed,name=min,proto3" json:"min,omitempty"`
}

func (x *Accessor) Reset() {
	*x = Accessor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Accessor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Accessor) ProtoMessage() {}

func (x *Accessor) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Accessor.ProtoReflect.Descriptor instead.
func (*Accessor) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{10}
}

func (x *Accessor) GetBufferView() int32 {
	if x != nil {
		return x.BufferView
	}
	return 0
}

func (x *Accessor) GetByteOffset() int32 {
	if x != nil {
		return x.ByteOffset
	}
	return 0
}

func (x *Accessor) GetComponentType() int32 {
	if x != nil {
		return x.ComponentType
	}
	return 0
}

func (x *Accessor) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Accessor) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Accessor) GetMax() []int32 {
	if x != nil {
		return x.Max
	}
	return nil
}

func (x *Accessor) GetMin() []int32 {
	if x != nil {
		return x.Min
	}
	return nil
}

type Asset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *Asset) Reset() {
	*x = Asset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Asset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Asset) ProtoMessage() {}

func (x *Asset) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Asset.ProtoReflect.Descriptor instead.
func (*Asset) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{11}
}

func (x *Asset) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GLTF struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scene       int32         `protobuf:"varint,1,opt,name=scene,proto3" json:"scene,omitempty"`
	Scenes      []*Scene      `protobuf:"bytes,2,rep,name=scenes,proto3" json:"scenes,omitempty"`
	Nodes       []*Node       `protobuf:"bytes,3,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Meshes      []*Mesh       `protobuf:"bytes,4,rep,name=meshes,proto3" json:"meshes,omitempty"`
	Textures    []*Texture    `protobuf:"bytes,5,rep,name=textures,proto3" json:"textures,omitempty"`
	Images      []*Image      `protobuf:"bytes,6,rep,name=images,proto3" json:"images,omitempty"`
	Samplers    []*Sampler    `protobuf:"bytes,7,rep,name=samplers,proto3" json:"samplers,omitempty"`
	Buffers     []*Buffer     `protobuf:"bytes,8,rep,name=buffers,proto3" json:"buffers,omitempty"`
	BufferViews []*BufferView `protobuf:"bytes,9,rep,name=bufferViews,proto3" json:"bufferViews,omitempty"`
	Accessors   []*Accessor   `protobuf:"bytes,10,rep,name=accessors,proto3" json:"accessors,omitempty"`
	Asset       *Asset        `protobuf:"bytes,11,opt,name=asset,proto3" json:"asset,omitempty"`
}

func (x *GLTF) Reset() {
	*x = GLTF{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mc_comm_gltf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GLTF) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GLTF) ProtoMessage() {}

func (x *GLTF) ProtoReflect() protoreflect.Message {
	mi := &file_mc_comm_gltf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GLTF.ProtoReflect.Descriptor instead.
func (*GLTF) Descriptor() ([]byte, []int) {
	return file_mc_comm_gltf_proto_rawDescGZIP(), []int{12}
}

func (x *GLTF) GetScene() int32 {
	if x != nil {
		return x.Scene
	}
	return 0
}

func (x *GLTF) GetScenes() []*Scene {
	if x != nil {
		return x.Scenes
	}
	return nil
}

func (x *GLTF) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GLTF) GetMeshes() []*Mesh {
	if x != nil {
		return x.Meshes
	}
	return nil
}

func (x *GLTF) GetTextures() []*Texture {
	if x != nil {
		return x.Textures
	}
	return nil
}

func (x *GLTF) GetImages() []*Image {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *GLTF) GetSamplers() []*Sampler {
	if x != nil {
		return x.Samplers
	}
	return nil
}

func (x *GLTF) GetBuffers() []*Buffer {
	if x != nil {
		return x.Buffers
	}
	return nil
}

func (x *GLTF) GetBufferViews() []*BufferView {
	if x != nil {
		return x.BufferViews
	}
	return nil
}

func (x *GLTF) GetAccessors() []*Accessor {
	if x != nil {
		return x.Accessors
	}
	return nil
}

func (x *GLTF) GetAsset() *Asset {
	if x != nil {
		return x.Asset
	}
	return nil
}

var File_mc_comm_gltf_proto protoreflect.FileDescriptor

var file_mc_comm_gltf_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x2f, 0x67, 0x6c, 0x74, 0x66, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x6d, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x22, 0x1d, 0x0a,
	0x05, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x1a, 0x0a, 0x04,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x6d, 0x65, 0x73, 0x68, 0x22, 0x5f, 0x0a, 0x0a, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x4e, 0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x12, 0x1d, 0x0a, 0x0a, 0x54, 0x45,
	0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x5f, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x54, 0x45, 0x58, 0x43, 0x4f, 0x4f, 0x52, 0x44, 0x30, 0x22, 0x5a, 0x0a, 0x09, 0x50, 0x72, 0x69,
	0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73,
	0x12, 0x33, 0x0a, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x52, 0x0a, 0x61, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x3a, 0x0a, 0x04, 0x4d, 0x65, 0x73, 0x68, 0x12, 0x32, 0x0a,
	0x0a, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x50, 0x72, 0x69, 0x6d,
	0x69, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x6d, 0x69, 0x74, 0x69, 0x76, 0x65,
	0x73, 0x22, 0x3b, 0x0a, 0x07, 0x54, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x22, 0x19,
	0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x22, 0x71, 0x0a, 0x07, 0x53, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x67, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x72, 0x61, 0x70, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x77, 0x72, 0x61, 0x70, 0x53, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x72, 0x61, 0x70, 0x54, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x72, 0x61, 0x70, 0x54, 0x22, 0x3a, 0x0a, 0x06,
	0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65,
	0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x79,
	0x74, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x9c, 0x01, 0x0a, 0x0a, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x53, 0x74, 0x72, 0x69, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xbe, 0x01, 0x0a, 0x08, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x56, 0x69,
	0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x56, 0x69, 0x65, 0x77, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x4f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x79, 0x74, 0x65, 0x4f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x22, 0x21, 0x0a, 0x05, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xcd, 0x03, 0x0a, 0x04,
	0x47, 0x4c, 0x54, 0x46, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x63, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x06, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x73, 0x12, 0x23, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x6d, 0x65, 0x73, 0x68, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x68, 0x52, 0x06, 0x6d, 0x65, 0x73, 0x68, 0x65, 0x73, 0x12, 0x2c,
	0x0a, 0x08, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6d, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x75,
	0x72, 0x65, 0x52, 0x08, 0x74, 0x65, 0x78, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x06,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d,
	0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x2e, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x52, 0x08, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65,
	0x72, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x07, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x73, 0x12, 0x35, 0x0a,
	0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x42, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x52, 0x0b, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x56,
	0x69, 0x65, 0x77, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x63, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x42, 0x09, 0x5a, 0x07, 0x6d,
	0x63, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mc_comm_gltf_proto_rawDescOnce sync.Once
	file_mc_comm_gltf_proto_rawDescData = file_mc_comm_gltf_proto_rawDesc
)

func file_mc_comm_gltf_proto_rawDescGZIP() []byte {
	file_mc_comm_gltf_proto_rawDescOnce.Do(func() {
		file_mc_comm_gltf_proto_rawDescData = protoimpl.X.CompressGZIP(file_mc_comm_gltf_proto_rawDescData)
	})
	return file_mc_comm_gltf_proto_rawDescData
}

var file_mc_comm_gltf_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_mc_comm_gltf_proto_goTypes = []interface{}{
	(*Scene)(nil),      // 0: mc.comm.Scene
	(*Node)(nil),       // 1: mc.comm.Node
	(*Attributes)(nil), // 2: mc.comm.Attributes
	(*Primitive)(nil),  // 3: mc.comm.Primitive
	(*Mesh)(nil),       // 4: mc.comm.Mesh
	(*Texture)(nil),    // 5: mc.comm.Texture
	(*Image)(nil),      // 6: mc.comm.Image
	(*Sampler)(nil),    // 7: mc.comm.Sampler
	(*Buffer)(nil),     // 8: mc.comm.Buffer
	(*BufferView)(nil), // 9: mc.comm.BufferView
	(*Accessor)(nil),   // 10: mc.comm.Accessor
	(*Asset)(nil),      // 11: mc.comm.Asset
	(*GLTF)(nil),       // 12: mc.comm.GLTF
}
var file_mc_comm_gltf_proto_depIdxs = []int32{
	2,  // 0: mc.comm.Primitive.attributes:type_name -> mc.comm.Attributes
	3,  // 1: mc.comm.Mesh.primitives:type_name -> mc.comm.Primitive
	0,  // 2: mc.comm.GLTF.scenes:type_name -> mc.comm.Scene
	1,  // 3: mc.comm.GLTF.nodes:type_name -> mc.comm.Node
	4,  // 4: mc.comm.GLTF.meshes:type_name -> mc.comm.Mesh
	5,  // 5: mc.comm.GLTF.textures:type_name -> mc.comm.Texture
	6,  // 6: mc.comm.GLTF.images:type_name -> mc.comm.Image
	7,  // 7: mc.comm.GLTF.samplers:type_name -> mc.comm.Sampler
	8,  // 8: mc.comm.GLTF.buffers:type_name -> mc.comm.Buffer
	9,  // 9: mc.comm.GLTF.bufferViews:type_name -> mc.comm.BufferView
	10, // 10: mc.comm.GLTF.accessors:type_name -> mc.comm.Accessor
	11, // 11: mc.comm.GLTF.asset:type_name -> mc.comm.Asset
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_mc_comm_gltf_proto_init() }
func file_mc_comm_gltf_proto_init() {
	if File_mc_comm_gltf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mc_comm_gltf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Primitive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mesh); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Texture); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sampler); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Buffer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BufferView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Accessor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Asset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mc_comm_gltf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GLTF); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mc_comm_gltf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mc_comm_gltf_proto_goTypes,
		DependencyIndexes: file_mc_comm_gltf_proto_depIdxs,
		MessageInfos:      file_mc_comm_gltf_proto_msgTypes,
	}.Build()
	File_mc_comm_gltf_proto = out.File
	file_mc_comm_gltf_proto_rawDesc = nil
	file_mc_comm_gltf_proto_goTypes = nil
	file_mc_comm_gltf_proto_depIdxs = nil
}
